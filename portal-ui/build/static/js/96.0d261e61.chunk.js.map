{"version":3,"sources":["screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/PageHeader/PageHeader.tsx","screens/Console/Common/Layout/PageLayout.tsx","common/BackLink.tsx","screens/Console/Buckets/ListBuckets/AddBucket.tsx"],"names":["inputStyles","makeStyles","theme","createStyles","inputFieldStyles","InputField","props","classes","InputProps","withStyles","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","label","onChange","value","id","name","type","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","autoFocus","inputProps","Fragment","container","className","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","title","placement","fullWidth","helperText","inputRebase","onClick","size","disableFocusRipple","disableRipple","disableTouchRipple","mapDispatchToProps","toggleList","connector","connect","state","sidebarOpen","system","operatorMode","managerObjects","objectBrowser","objectManager","objectsToManage","headerContainer","width","minHeight","display","backgroundColor","left","boxShadow","justifyContent","alignItems","labelStyle","color","fontSize","fontWeight","marginLeft","marginTop","rightMenu","textAlign","logo","fill","palette","primary","main","actions","direction","xs","sm","md","item","style","height","length","component","pageContentStyles","children","contentSpacer","link","textDecoration","padding","light","icon","marginRight","to","addBucketModalOpen","buckets","open","bucketName","addBucketName","versioningEnabled","addBucketVersioningEnabled","lockingEnabled","addBucketLockingEnabled","quotaEnabled","addBucketQuotaEnabled","quotaType","addBucketQuotaType","quotaSize","addBucketQuotaSize","quotaUnit","addBucketQuotaUnit","retentionEnabled","addBucketRetentionEnabled","retentionMode","addBucketRetentionMode","retentionUnit","addBucketRetentionUnit","retentionValidity","addBucketRetentionValidity","distributedSetup","addBucketVersioned","addBucketVersioning","enableObjectLocking","addBucketEnableObjectLocking","addBucketQuota","addBucketRetention","setErrorSnackMessage","buttonContainer","border","borderRadius","marginBottom","headTitle","paddingLeft","h6title","paddingBottom","containerForHeader","spacing","useState","addLoading","setAddLoading","sendEnabled","setSendEnabled","setLockingFieldDisabled","useDebounce","useEffect","resetForm","valid","trim","parseInt","Number","isNaN","boxy","noValidate","onSubmit","e","event","preventDefault","request","versioning","locking","amount","getBytes","quota","enabled","quota_type","retention","mode","unit","validity","api","invoke","then","res","newBucketName","history","push","catch","err","addRecord","target","variant","clearButton"],"mappings":"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","file":"static/js/96.0d261e61.chunk.js","sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","import React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { connect } from \"react-redux\";\nimport { Box } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { AppState } from \"../../../../store\";\nimport OperatorLogo from \"../../../../icons/OperatorLogo\";\nimport ConsoleLogo from \"../../../../icons/ConsoleLogo\";\nimport { IFileItem } from \"../../ObjectBrowser/reducers\";\nimport { toggleList } from \"../../ObjectBrowser/actions\";\nimport { ObjectManagerIcon } from \"../../../../icons\";\n\ninterface IPageHeader {\n  classes: any;\n  sidebarOpen?: boolean;\n  operatorMode?: boolean;\n  label: any;\n  actions?: any;\n  managerObjects?: IFileItem[];\n  toggleList: typeof toggleList;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      // position: \"absolute\",\n      width: \"100%\",\n      minHeight: 79,\n      display: \"flex\",\n      backgroundColor: \"#fff\",\n      left: 0,\n      boxShadow: \"rgba(0,0,0,.08) 0 3px 10px\",\n    },\n    label: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n    labelStyle: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 700,\n      marginLeft: 34,\n      marginTop: 8,\n    },\n    rightMenu: {\n      textAlign: \"right\",\n    },\n    logo: {\n      marginLeft: 34,\n      fill: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 120,\n      },\n    },\n  });\n\nconst PageHeader = ({\n  classes,\n  label,\n  actions,\n  sidebarOpen,\n  operatorMode,\n  managerObjects,\n  toggleList,\n}: IPageHeader) => {\n  return (\n    <Grid\n      container\n      className={`${classes.headerContainer} page-header`}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Box display={{ xs: \"block\", sm: \"block\", md: \"none\" }}>\n        <Grid item xs={12} style={{ height: 10 }}>\n          &nbsp;\n        </Grid>\n      </Box>\n      {/* <Grid item xs={12} sm={12} md={6} className={classes.label}>\n        {!sidebarOpen && (\n          <div className={classes.logo}>\n            {operatorMode ? <OperatorLogo /> : <ConsoleLogo />}\n          </div>\n        )}\n        <Typography variant=\"h4\" className={classes.labelStyle}>\n          {label}\n        </Typography>\n      </Grid> */}\n      <Grid item xs={12} sm={12} md={6} className={classes.rightMenu}>\n        {actions && actions}\n        {managerObjects && managerObjects.length > 0 && (\n          <IconButton\n            color=\"primary\"\n            aria-label=\"Refresh List\"\n            component=\"span\"\n            onClick={() => {\n              toggleList();\n            }}\n            size=\"large\"\n          >\n            <ObjectManagerIcon />\n          </IconButton>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  sidebarOpen: state.system.sidebarOpen,\n  operatorMode: state.system.operatorMode,\n  managerObjects: state.objectBrowser.objectManager.objectsToManage,\n});\n\nconst mapDispatchToProps = {\n  toggleList,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(PageHeader));\n","import React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { pageContentStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...pageContentStyles,\n  });\n\ntype PageLayoutProps = {\n  className?: string;\n  classes?: any;\n  children: any;\n};\n\nconst PageLayout = ({ classes, className = \"\", children }: PageLayoutProps) => {\n  return (\n    <div className={classes.contentSpacer}>\n      <Grid container>\n        <Grid item xs={12} className={className}>\n          {children}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(PageLayout);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { BackSettingsIcon } from \"../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    link: {\n      display: \"flex\",\n      alignItems: \"center\",\n      textDecoration: \"none\",\n      maxWidth: \"250px\",\n      padding: \"2rem 2rem 0rem 2rem\",\n      color: theme.palette.primary.light,\n      fontSize: \".8rem\",\n      \"&:hover\": {\n        textDecoration: \"underline\",\n      },\n    },\n    icon: {\n      marginRight: \".3rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n  });\n\ninterface IBackLink {\n  classes: any;\n  to: string;\n  label: string;\n  className?: any;\n}\n\nconst BackLink = ({ to, label, classes, className }: IBackLink) => {\n  return (\n    <Link to={to} className={`${classes.link} ${className ? className : \"\"}`}>\n      <div className={classes.icon}>\n        <BackSettingsIcon />\n      </div>\n      <div className={classes.label}>{label}</div>\n    </Link>\n  );\n};\n\nexport default withStyles(styles)(BackLink);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Button, LinearProgress, SelectChangeEvent } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { containerForHeader } from \"../../Common/FormComponents/common/styleLibrary\";\nimport api from \"../../../../common/api\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport { factorForDropdown, getBytes } from \"../../../../common/utils\";\nimport { AppState } from \"../../../../store\";\nimport history from \"../../../../history\";\nimport { connect } from \"react-redux\";\nimport {\n  addBucketEnableObjectLocking,\n  addBucketName,\n  addBucketQuota,\n  addBucketQuotaSize,\n  addBucketQuotaType,\n  addBucketQuotaUnit,\n  addBucketRetention,\n  addBucketRetentionMode,\n  addBucketRetentionUnit,\n  addBucketRetentionValidity,\n  addBucketVersioning,\n} from \"../actions\";\nimport { useDebounce } from \"use-debounce\";\nimport { MakeBucketRequest } from \"../types\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport BackLink from \"../../../../common/BackLink\";\nimport { BucketsIcon } from \"../../../../icons\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      marginTop: 24,\n      textAlign: \"right\",\n      \"& .MuiButton-root\": {\n        marginLeft: 8,\n      },\n    },\n    error: {\n      color: \"#b53b4b\",\n      border: \"1px solid #b53b4b\",\n      padding: 8,\n      borderRadius: 3,\n    },\n    title: {\n      marginBottom: 8,\n    },\n    headTitle: {\n      fontWeight: \"bold\",\n      fontSize: 16,\n      paddingLeft: 8,\n    },\n    h6title: {\n      fontWeight: \"bold\",\n      color: \"#000000\",\n      fontSize: 20,\n      paddingBottom: 8,\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\ninterface IAddBucketProps {\n  classes: any;\n  addBucketName: typeof addBucketName;\n  addBucketVersioned: typeof addBucketVersioning;\n  enableObjectLocking: typeof addBucketEnableObjectLocking;\n  addBucketQuota: typeof addBucketQuota;\n  addBucketQuotaType: typeof addBucketQuotaType;\n  addBucketQuotaSize: typeof addBucketQuotaSize;\n  addBucketQuotaUnit: typeof addBucketQuotaUnit;\n  addBucketRetention: typeof addBucketRetention;\n  addBucketRetentionMode: typeof addBucketRetentionMode;\n  addBucketRetentionUnit: typeof addBucketRetentionUnit;\n  addBucketRetentionValidity: typeof addBucketRetentionValidity;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  bucketName: string;\n  versioningEnabled: boolean;\n  lockingEnabled: boolean;\n  quotaEnabled: boolean;\n  quotaType: string;\n  quotaSize: string;\n  quotaUnit: string;\n  retentionEnabled: boolean;\n  retentionMode: string;\n  retentionUnit: string;\n  retentionValidity: number;\n  distributedSetup: boolean;\n}\n\nconst AddBucket = ({\n  classes,\n  addBucketName,\n  addBucketVersioned,\n  enableObjectLocking,\n  addBucketQuota,\n  addBucketQuotaType,\n  addBucketQuotaSize,\n  addBucketQuotaUnit,\n  addBucketRetention,\n  addBucketRetentionMode,\n  addBucketRetentionUnit,\n  addBucketRetentionValidity,\n  setErrorSnackMessage,\n  bucketName,\n  versioningEnabled,\n  lockingEnabled,\n  quotaEnabled,\n  quotaType,\n  quotaSize,\n  quotaUnit,\n  retentionEnabled,\n  retentionMode,\n  retentionUnit,\n  retentionValidity,\n  distributedSetup,\n}: IAddBucketProps) => {\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [sendEnabled, setSendEnabled] = useState<boolean>(false);\n  const [lockingFieldDisabled, setLockingFieldDisabled] =\n    useState<boolean>(false);\n\n  const addRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n\n    let request: MakeBucketRequest = {\n      name: bucketName,\n      versioning: distributedSetup ? versioningEnabled : false,\n      locking: distributedSetup ? lockingEnabled : false,\n    };\n\n    if (distributedSetup) {\n      if (quotaEnabled) {\n        const amount = getBytes(quotaSize, quotaUnit, false);\n        request.quota = {\n          enabled: true,\n          quota_type: quotaType,\n          amount: parseInt(amount),\n        };\n      }\n\n      if (retentionEnabled) {\n        request.retention = {\n          mode: retentionMode,\n          unit: retentionUnit,\n          validity: retentionValidity,\n        };\n      }\n    }\n\n    api\n      .invoke(\"POST\", \"/api/v1/buckets\", request)\n      .then((res) => {\n        setAddLoading(false);\n        const newBucketName = `${bucketName}`;\n        resetForm();\n        history.push(`/buckets/${newBucketName}/browse`);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setErrorSnackMessage(err);\n      });\n  };\n\n  const [value] = useDebounce(bucketName, 1000);\n\n  useEffect(() => {\n    addBucketName(value);\n  }, [value, addBucketName]);\n\n  const resetForm = () => {\n    addBucketName(\"\");\n    addBucketVersioned(false);\n    enableObjectLocking(false);\n    addBucketQuota(false);\n    addBucketQuotaType(\"hard\");\n    addBucketQuotaSize(\"1\");\n    addBucketQuotaUnit(\"TiB\");\n    addBucketRetention(false);\n    addBucketRetentionMode(\"compliance\");\n    addBucketRetentionUnit(\"days\");\n    addBucketRetentionValidity(1);\n  };\n\n  useEffect(() => {\n    let valid = false;\n\n    if (bucketName.trim() !== \"\") {\n      valid = true;\n    }\n\n    if (quotaEnabled && valid) {\n      if (quotaSize.trim() === \"\" || parseInt(quotaSize) === 0) {\n        valid = false;\n      }\n    }\n\n    if (!versioningEnabled || !retentionEnabled) {\n      addBucketRetention(false);\n      addBucketRetentionMode(\"compliance\");\n      addBucketRetentionUnit(\"days\");\n      addBucketRetentionValidity(1);\n    }\n\n    if (retentionEnabled) {\n      // if retention is enabled, then objec locking should be enabled as well\n      enableObjectLocking(true);\n      setLockingFieldDisabled(true);\n    } else {\n      setLockingFieldDisabled(false);\n    }\n\n    if (\n      retentionEnabled &&\n      (Number.isNaN(retentionValidity) || retentionValidity < 1)\n    ) {\n      valid = false;\n    }\n\n    setSendEnabled(valid);\n  }, [\n    bucketName,\n    retentionEnabled,\n    lockingEnabled,\n    quotaType,\n    quotaSize,\n    quotaUnit,\n    quotaEnabled,\n    addBucketRetention,\n    addBucketRetentionMode,\n    addBucketRetentionUnit,\n    addBucketRetentionValidity,\n    retentionValidity,\n    versioningEnabled,\n    enableObjectLocking,\n  ]);\n\n  return (\n    <Fragment>\n      <PageHeader label={\"Create a Bucket\"} />\n      <BackLink label={\"Return to Buckets\"} to={\"/buckets\"} />\n      <PageLayout>\n        <Grid item xs={12} className={classes.boxy}>\n          <form\n            noValidate\n            autoComplete=\"off\"\n            onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n              addRecord(e);\n            }}\n          >\n            <Grid container>\n              <Grid item xs={12} container className={classes.title}>\n                <Grid item xs={\"auto\"}>\n                  <BucketsIcon />\n                </Grid>\n                <Grid item xs className={classes.headTitle}>\n                  Create Bucket\n                </Grid>\n              </Grid>\n              <Grid item xs={12} container>\n                <Grid item xs={12}>\n                  <InputBoxWrapper\n                    id=\"bucket-name\"\n                    name=\"bucket-name\"\n                    autoFocus={true}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                      addBucketName(event.target.value);\n                    }}\n                    label=\"Bucket Name\"\n                    value={bucketName}\n                  />\n                </Grid>\n                {/* <Grid item xs={12}>\n                  <div className={classes.h6title}>Features</div>\n                  <br />\n                  {!distributedSetup && (\n                    <Fragment>\n                      <div className={classes.error}>\n                        These features are unavailable in a single-disk setup.\n                        <br />\n                        Please deploy a server in{\" \"}\n                        <a\n                          href=\"https://docs.min.io/minio/baremetal/installation/deploy-minio-distributed.html?ref=con\"\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          Distributed Mode\n                        </a>{\" \"}\n                        to use these features.\n                      </div>\n                      <br />\n                      <br />\n                    </Fragment>\n                  )}\n                </Grid>\n\n                <Grid item xs={12}>\n                  <FormSwitchWrapper\n                    value=\"versioned\"\n                    id=\"versioned\"\n                    name=\"versioned\"\n                    checked={versioningEnabled}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                      addBucketVersioned(event.target.checked);\n                    }}\n                    description={\n                      \"Allows to keep multiple versions of the same object under the same key.\"\n                    }\n                    label={\"Versioning\"}\n                    disabled={!distributedSetup || lockingEnabled}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormSwitchWrapper\n                    value=\"locking\"\n                    id=\"locking\"\n                    name=\"locking\"\n                    disabled={lockingFieldDisabled || !distributedSetup}\n                    checked={lockingEnabled}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                      enableObjectLocking(event.target.checked);\n                      if (event.target.checked) {\n                        addBucketVersioned(true);\n                      }\n                    }}\n                    label={\"Object Locking\"}\n                    description={\n                      \"Required to support retention and legal hold. Can only be enabled at bucket creation.\"\n                    }\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <FormSwitchWrapper\n                    value=\"bucket_quota\"\n                    id=\"bucket_quota\"\n                    name=\"bucket_quota\"\n                    checked={quotaEnabled}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                      addBucketQuota(event.target.checked);\n                    }}\n                    label={\"Quota\"}\n                    description={\"Limit the amount of data in the bucket.\"}\n                    disabled={!distributedSetup}\n                  />\n                </Grid>\n                {quotaEnabled && distributedSetup && (\n                  <React.Fragment>\n                    <Grid item xs={12}>\n                      <RadioGroupSelector\n                        currentSelection={quotaType}\n                        id=\"quota_type\"\n                        name=\"quota_type\"\n                        label=\"Quota Type\"\n                        onChange={(\n                          e: React.ChangeEvent<{ value: unknown }>\n                        ) => {\n                          addBucketQuotaType(e.target.value as string);\n                        }}\n                        selectorOptions={[\n                          { value: \"hard\", label: \"Hard\" },\n                          { value: \"fifo\", label: \"FIFO\" },\n                        ]}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Grid container>\n                        <Grid item xs={10}>\n                          <InputBoxWrapper\n                            type=\"number\"\n                            id=\"quota_size\"\n                            name=\"quota_size\"\n                            onChange={(\n                              e: React.ChangeEvent<HTMLInputElement>\n                            ) => {\n                              addBucketQuotaSize(e.target.value);\n                            }}\n                            label=\"Quota\"\n                            value={quotaSize}\n                            required\n                            min=\"1\"\n                          />\n                        </Grid>\n                        <Grid item xs={2}>\n                          <div style={{ width: 100 }}>\n                            <SelectWrapper\n                              label=\"\"\n                              id=\"quota_unit\"\n                              name=\"quota_unit\"\n                              value={quotaUnit}\n                              onChange={(e: SelectChangeEvent<string>) => {\n                                addBucketQuotaUnit(e.target.value as string);\n                              }}\n                              options={factorForDropdown()}\n                            />\n                          </div>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </React.Fragment>\n                )}\n                {versioningEnabled && distributedSetup && (\n                  <Grid item xs={12}>\n                    <FormSwitchWrapper\n                      value=\"bucket_retention\"\n                      id=\"bucket_retention\"\n                      name=\"bucket_retention\"\n                      checked={retentionEnabled}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>\n                      ) => {\n                        addBucketRetention(event.target.checked);\n                      }}\n                      label={\"Retention\"}\n                      description={\n                        \"Impose rules to prevent object deletion for a period of time.\"\n                      }\n                    />\n                  </Grid>\n                )}\n                {retentionEnabled && distributedSetup && (\n                  <React.Fragment>\n                    <Grid item xs={12}>\n                      <RadioGroupSelector\n                        currentSelection={retentionMode}\n                        id=\"retention_mode\"\n                        name=\"retention_mode\"\n                        label=\"Retention Mode\"\n                        onChange={(\n                          e: React.ChangeEvent<{ value: unknown }>\n                        ) => {\n                          addBucketRetentionMode(e.target.value as string);\n                        }}\n                        selectorOptions={[\n                          { value: \"compliance\", label: \"Compliance\" },\n                          { value: \"governance\", label: \"Governance\" },\n                        ]}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <RadioGroupSelector\n                        currentSelection={retentionUnit}\n                        id=\"retention_unit\"\n                        name=\"retention_unit\"\n                        label=\"Retention Unit\"\n                        onChange={(\n                          e: React.ChangeEvent<{ value: unknown }>\n                        ) => {\n                          addBucketRetentionUnit(e.target.value as string);\n                        }}\n                        selectorOptions={[\n                          { value: \"days\", label: \"Days\" },\n                          { value: \"years\", label: \"Years\" },\n                        ]}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"retention_validity\"\n                        name=\"retention_validity\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          addBucketRetentionValidity(e.target.valueAsNumber);\n                        }}\n                        label=\"Retention Validity\"\n                        value={String(retentionValidity)}\n                        required\n                        min=\"1\"\n                      />\n                    </Grid>\n                  </React.Fragment>\n                )} */}\n              </Grid>\n              <Grid item xs={12} className={classes.buttonContainer}>\n                <Button\n                  type=\"button\"\n                  variant={\"outlined\"}\n                  className={classes.clearButton}\n                  onClick={resetForm}\n                >\n                  Clear\n                </Button>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={addLoading || !sendEnabled}\n                >\n                  Create Bucket\n                </Button>\n              </Grid>\n              {addLoading && (\n                <Grid item xs={12}>\n                  <LinearProgress />\n                </Grid>\n              )}\n            </Grid>\n          </form>\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  addBucketModalOpen: state.buckets.open,\n  bucketName: state.buckets.addBucketName,\n  versioningEnabled: state.buckets.addBucketVersioningEnabled,\n  lockingEnabled: state.buckets.addBucketLockingEnabled,\n  quotaEnabled: state.buckets.addBucketQuotaEnabled,\n  quotaType: state.buckets.addBucketQuotaType,\n  quotaSize: state.buckets.addBucketQuotaSize,\n  quotaUnit: state.buckets.addBucketQuotaUnit,\n  retentionEnabled: state.buckets.addBucketRetentionEnabled,\n  retentionMode: state.buckets.addBucketRetentionMode,\n  retentionUnit: state.buckets.addBucketRetentionUnit,\n  retentionValidity: state.buckets.addBucketRetentionValidity,\n  distributedSetup: state.system.distributedSetup,\n});\n\nconst connector = connect(mapState, {\n  addBucketName: addBucketName,\n  addBucketVersioned: addBucketVersioning,\n  enableObjectLocking: addBucketEnableObjectLocking,\n  addBucketQuota: addBucketQuota,\n  addBucketQuotaType: addBucketQuotaType,\n  addBucketQuotaSize: addBucketQuotaSize,\n  addBucketQuotaUnit: addBucketQuotaUnit,\n  addBucketRetention: addBucketRetention,\n  addBucketRetentionMode: addBucketRetentionMode,\n  addBucketRetentionUnit: addBucketRetentionUnit,\n  addBucketRetentionValidity: addBucketRetentionValidity,\n  setErrorSnackMessage: setErrorSnackMessage,\n});\n\nexport default connector(withStyles(styles)(AddBucket));\n"],"sourceRoot":""}