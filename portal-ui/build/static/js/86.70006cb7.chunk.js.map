{"version":3,"sources":["screens/Console/Common/PageHeader/PageHeader.tsx","screens/Console/Common/Layout/PageLayout.tsx","common/BackLink.tsx","../node_modules/@mui/material/Grid/GridContext.js","../node_modules/@mui/material/Grid/gridClasses.js","../node_modules/@mui/material/Grid/Grid.js","screens/Console/Configurations/TiersConfiguration/utils.tsx","screens/Console/Configurations/TiersConfiguration/TierTypeSelector.tsx"],"names":["mapDispatchToProps","toggleList","connector","connect","state","sidebarOpen","system","operatorMode","managerObjects","objectBrowser","objectManager","objectsToManage","withStyles","theme","createStyles","headerContainer","width","minHeight","display","backgroundColor","left","boxShadow","label","justifyContent","alignItems","labelStyle","color","fontSize","fontWeight","marginLeft","marginTop","rightMenu","textAlign","logo","fill","palette","primary","main","classes","actions","container","className","direction","xs","sm","md","item","style","height","length","component","onClick","size","pageContentStyles","children","contentSpacer","link","textDecoration","maxWidth","padding","light","icon","marginRight","to","GridContext","React","getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","gridClasses","generateUtilityClasses","map","spacing","wrap","_excluded","getOffset","val","parse","parseFloat","String","replace","resolveSpacingClasses","styles","Number","isNaN","lg","xl","GridRoot","styled","name","overridesResolver","props","ownerState","zeroMinWidth","root","_extends","boxSizing","flexWrap","margin","minWidth","directionValues","resolveBreakpointValues","values","breakpoints","handleBreakpoints","propValue","output","flexDirection","indexOf","rowSpacing","rowSpacingValues","themeSpacing","paddingTop","columnSpacing","columnSpacingValues","paddingLeft","keys","reduce","globalStyles","breakpoint","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","Math","round","more","fullWidth","Object","assign","up","generateGrid","Grid","inProps","ref","element","themeProps","useThemeProps","extendSxProp","columnsProp","columnSpacingProp","rowSpacingProp","other","_objectWithoutPropertiesLoose","columnsContext","slots","composeClasses","useUtilityClasses","_jsx","clsx","as","Provider","value","minioServiceName","gcsServiceName","s3ServiceName","azureServiceName","tierTypes","serviceName","targetTitle","searchField","settingsCommon","typesSelection","containerForHeader","history","iconContainer","tierType","index","lambdaNotif","selectName","push","lambdaNotifIcon","src","logoButton","alt","lambdaNotifTitle","toString"],"mappings":"+GAAA,qFAsHMA,EAAqB,CACzBC,gBAGIC,EAAYC,aAVD,SAACC,GAAD,MAAsB,CACrCC,YAAaD,EAAME,OAAOD,YAC1BE,aAAcH,EAAME,OAAOC,aAC3BC,eAAgBJ,EAAMK,cAAcC,cAAcC,mBAOhBX,GAErBE,MAAUU,aAlGV,SAACC,GAAD,OACbC,YAAa,CACXC,gBAAiB,CAEfC,MAAO,OACPC,UAAW,GACXC,QAAS,OACTC,gBAAiB,OACjBC,KAAM,EACNC,UAAW,8BAEbC,MAAO,CACLJ,QAAS,OACTK,eAAgB,aAChBC,WAAY,UAEdC,WAAY,CACVC,MAAO,OACPC,SAAU,GACVC,WAAY,IACZC,WAAY,GACZC,UAAW,GAEbC,UAAW,CACTC,UAAW,SAEbC,KAAM,CACJJ,WAAY,GACZK,KAAMrB,EAAMsB,QAAQC,QAAQC,KAC5B,cAAe,CACbrB,MAAO,UAoEUJ,EA/DN,SAAC,GAQA,IAPlB0B,EAOiB,EAPjBA,QAEAC,GAKiB,EANjBjB,MAMiB,EALjBiB,SAGA/B,GAEiB,EAJjBH,YAIiB,EAHjBE,aAGiB,EAFjBC,gBACAP,EACiB,EADjBA,WAEA,OACE,eAAC,IAAD,CACEuC,WAAS,EACTC,UAAS,UAAKH,EAAQvB,gBAAb,gBACT2B,UAAU,MACVlB,WAAW,SAJb,UAME,cAAC,IAAD,CAAKN,QAAS,CAAEyB,GAAI,QAASC,GAAI,QAASC,GAAI,QAA9C,SACE,cAAC,IAAD,CAAMC,MAAI,EAACH,GAAI,GAAII,MAAO,CAAEC,OAAQ,IAApC,oBAcF,eAAC,IAAD,CAAMF,MAAI,EAACH,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGJ,UAAWH,EAAQP,UAArD,UACGQ,GAAWA,EACX/B,GAAkBA,EAAeyC,OAAS,GACzC,cAAC,IAAD,CACEvB,MAAM,UACN,aAAW,eACXwB,UAAU,OACVC,QAAS,WACPlD,KAEFmD,KAAK,QAPP,SASE,cAAC,KAAD,iB,8FC1EGxC,iBAvBA,SAACC,GAAD,OACbC,YAAa,eACRuC,QAqBQzC,EAZI,SAAC,GAA4D,IAA1D0B,EAAyD,EAAzDA,QAAyD,IAAhDG,iBAAgD,MAApC,GAAoC,EAAhCa,EAAgC,EAAhCA,SAC7C,OACE,qBAAKb,UAAWH,EAAQiB,cAAxB,SACE,cAAC,IAAD,CAAMf,WAAS,EAAf,SACE,cAAC,IAAD,CAAMM,MAAI,EAACH,GAAI,GAAIF,UAAWA,EAA9B,SACGa,Y,iCCvBX,kDA+De1C,iBAxCA,SAACC,GAAD,OACbC,YAAa,CACX0C,KAAM,CACJtC,QAAS,OACTM,WAAY,SACZiC,eAAgB,OAChBC,SAAU,QACVC,QAAS,sBACTjC,MAAOb,EAAMsB,QAAQC,QAAQwB,MAC7BjC,SAAU,QACV,UAAW,CACT8B,eAAgB,cAGpBI,KAAM,CACJC,YAAa,QACb5C,QAAS,OACTM,WAAY,SACZD,eAAgB,cAsBPX,EAXE,SAAC,GAAkD,IAAhDmD,EAA+C,EAA/CA,GAAIzC,EAA2C,EAA3CA,MAAOgB,EAAoC,EAApCA,QAASG,EAA2B,EAA3BA,UACtC,OACE,eAAC,IAAD,CAAMsB,GAAIA,EAAItB,UAAS,UAAKH,EAAQkB,KAAb,YAAqBf,GAAwB,IAApE,UACE,qBAAKA,UAAWH,EAAQuB,KAAxB,SACE,cAAC,IAAD,MAEF,qBAAKpB,UAAWH,EAAQhB,MAAxB,SAAgCA,W,iIC/CvB0C,MANkBC,kB,iBCJ1B,SAASC,EAAoBC,GAClC,OAAOC,YAAqB,UAAWD,GAEzC,IAGME,EAAa,CAAC,QAAQ,EAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAMtDC,EALKC,YAAuB,UAAD,CAAa,OAAQ,YAAa,OAAQ,gBAA1C,mBAJzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAKpCC,KAAI,SAAAC,GAAO,2BAAkBA,OADC,YAHvB,CAAC,iBAAkB,SAAU,cAAe,OAKjDD,KAAI,SAAA9B,GAAS,6BAAoBA,OAFL,YAF5B,CAAC,SAAU,eAAgB,QAKhC8B,KAAI,SAAAE,GAAI,wBAAeA,OAHU,YAIvCL,EAAWG,KAAI,SAAApB,GAAI,wBAAeA,OAJK,YAIOiB,EAAWG,KAAI,SAAApB,GAAI,wBAAeA,OAJzC,YAIqDiB,EAAWG,KAAI,SAAApB,GAAI,wBAAeA,OAJvF,YAImGiB,EAAWG,KAAI,SAAApB,GAAI,wBAAeA,OAJrI,YAIiJiB,EAAWG,KAAI,SAAApB,GAAI,wBAAeA,S,OCVvNuB,EAAY,CAAC,YAAa,UAAW,gBAAiB,YAAa,YAAa,YAAa,OAAQ,KAAM,KAAM,aAAc,KAAM,UAAW,OAAQ,KAAM,KAAM,gBAuB1K,SAASC,EAAUC,GACjB,IAAMC,EAAQC,WAAWF,GACzB,gBAAUC,GAAV,OAAkBE,OAAOH,GAAKI,QAAQD,OAAOF,GAAQ,KAAO,MAiKvD,SAASI,EAAsBT,EAASjC,GAAwB,IAAb2C,EAAa,uDAAJ,GAEjE,IAAK3C,IAAciC,GAAWA,GAAW,EACvC,MAAO,GAIT,GAAuB,kBAAZA,IAAyBW,OAAOC,MAAMD,OAAOX,KAAgC,kBAAZA,EAC1E,MAAO,CAACU,EAAO,cAAD,OAAeH,OAAOP,MAA5B,qBAAyDO,OAAOP,KAI1E,IACE9B,EAKE8B,EALF9B,GACAC,EAIE6B,EAJF7B,GACAC,EAGE4B,EAHF5B,GACAyC,EAEEb,EAFFa,GACAC,EACEd,EADFc,GAEF,MAAO,CAACH,OAAOzC,GAAM,IAAMwC,EAAO,cAAD,OAAeH,OAAOrC,MAA5B,qBAAoDqC,OAAOrC,KAAQyC,OAAOxC,GAAM,IAAMuC,EAAO,cAAD,OAAeH,OAAOpC,MAA5B,qBAAoDoC,OAAOpC,KAAQwC,OAAOvC,GAAM,IAAMsC,EAAO,cAAD,OAAeH,OAAOnC,MAA5B,qBAAoDmC,OAAOnC,KAAQuC,OAAOE,GAAM,IAAMH,EAAO,cAAD,OAAeH,OAAOM,MAA5B,qBAAoDN,OAAOM,KAAQF,OAAOG,GAAM,IAAMJ,EAAO,cAAD,OAAeH,OAAOO,MAA5B,qBAAoDP,OAAOO,MAQhb,IAAMC,EAAWC,YAAO,MAAO,CAC7BC,KAAM,UACNvB,KAAM,OACNwB,kBAAmB,SAACC,EAAOT,GACzB,MAYIS,EAAMC,WAXRrD,EADF,EACEA,UACAE,EAFF,EAEEA,UACAI,EAHF,EAGEA,KACAwC,EAJF,EAIEA,GACAzC,EALF,EAKEA,GACAD,EANF,EAMEA,GACA6B,EAPF,EAOEA,QACAC,EARF,EAQEA,KACAa,EATF,EASEA,GACA5C,EAVF,EAUEA,GACAmD,EAXF,EAWEA,aAEF,OAAQX,EAAOY,KAAMvD,GAAa2C,EAAO3C,UAAWM,GAAQqC,EAAOrC,KAAMgD,GAAgBX,EAAOW,cAAhG,mBAAiHZ,EAAsBT,EAASjC,EAAW2C,IAA3J,CAAkL,QAAdzC,GAAuByC,EAAO,gBAAD,OAAiBH,OAAOtC,KAAwB,SAATgC,GAAmBS,EAAO,WAAD,OAAYH,OAAON,MAAiB,IAAP/B,GAAgBwC,EAAO,WAAD,OAAYH,OAAOrC,MAAe,IAAPC,GAAgBuC,EAAO,WAAD,OAAYH,OAAOpC,MAAe,IAAPC,GAAgBsC,EAAO,WAAD,OAAYH,OAAOnC,MAAe,IAAPyC,GAAgBH,EAAO,WAAD,OAAYH,OAAOM,MAAe,IAAPC,GAAgBJ,EAAO,WAAD,OAAYH,OAAOO,SAjB9fE,EAmBd,gBACDI,EADC,EACDA,WADC,OAEGG,YAAS,CACbC,UAAW,cACVJ,EAAWrD,WAAa,CACzBtB,QAAS,OACTgF,SAAU,OACVlF,MAAO,QACN6E,EAAW/C,MAAQ,CACpBqD,OAAQ,GAEPN,EAAWC,cAAgB,CAC5BM,SAAU,GACW,WAApBP,EAAWnB,MAAqB,CACjCwB,SAAU,UACW,YAApBL,EAAWnB,MAAsB,CAClCwB,SAAU,oBA7JL,YAGJ,IAFDrF,EAEC,EAFDA,MACAgF,EACC,EADDA,WAEMQ,EAAkBC,YAAwB,CAC9CC,OAAQV,EAAWnD,UACnB8D,YAAa3F,EAAM2F,YAAYD,SAEjC,OAAOE,YAAkB,CACvB5F,SACCwF,GAAiB,SAAAK,GAClB,IAAMC,EAAS,CACbC,cAAeF,GASjB,OANoC,IAAhCA,EAAUG,QAAQ,YACpBF,EAAO,QAAD,OAASrC,EAAYxB,OAAU,CACnCY,SAAU,SAIPiD,QAGJ,YAGJ,IAFD9F,EAEC,EAFDA,MACAgF,EACC,EADDA,WAGErD,EAEEqD,EAFFrD,UACAsE,EACEjB,EADFiB,WAEE3B,EAAS,GAEb,GAAI3C,GAA4B,IAAfsE,EAAkB,CACjC,IAAMC,EAAmBT,YAAwB,CAC/CC,OAAQO,EACRN,YAAa3F,EAAM2F,YAAYD,SAEjCpB,EAASsB,YAAkB,CACzB5F,SACCkG,GAAkB,SAAAL,GACnB,IAAMM,EAAenG,EAAM4D,QAAQiC,GAEnC,MAAqB,QAAjBM,EACF,aACElF,UAAW,IAAF,OAAM8C,EAAUoC,KAD3B,eAEW1C,EAAYxB,MAAS,CAC5BmE,WAAYrC,EAAUoC,KAKrB,MAIX,OAAO7B,KAEF,YAGJ,IAFDtE,EAEC,EAFDA,MACAgF,EACC,EADDA,WAGErD,EAEEqD,EAFFrD,UACA0E,EACErB,EADFqB,cAEE/B,EAAS,GAEb,GAAI3C,GAA+B,IAAlB0E,EAAqB,CACpC,IAAMC,EAAsBb,YAAwB,CAClDC,OAAQW,EACRV,YAAa3F,EAAM2F,YAAYD,SAEjCpB,EAASsB,YAAkB,CACzB5F,SACCsG,GAAqB,SAAAT,GACtB,IAAMM,EAAenG,EAAM4D,QAAQiC,GAEnC,MAAqB,QAAjBM,EACF,aACEhG,MAAO,eAAF,OAAiB4D,EAAUoC,GAA3B,KACLnF,WAAY,IAAF,OAAM+C,EAAUoC,KAF5B,eAGW1C,EAAYxB,MAAS,CAC5BsE,YAAaxC,EAAUoC,KAKtB,MAIX,OAAO7B,KAiEiD,gBACxDtE,EADwD,EACxDA,MACAgF,EAFwD,EAExDA,WAFwD,OAGpDhF,EAAM2F,YAAYa,KAAKC,QAAO,SAACC,EAAcC,GAGjD,OAnOF,SAAsBD,EAAc1G,EAAO2G,EAAY3B,GACrD,IAAMzC,EAAOyC,EAAW2B,GAExB,GAAKpE,EAAL,CAIA,IAAI+B,EAAS,GAEb,IAAa,IAAT/B,EAEF+B,EAAS,CACPsC,UAAW,EACXC,SAAU,EACVhE,SAAU,aAEP,GAAa,SAATN,EACT+B,EAAS,CACPsC,UAAW,OACXC,SAAU,EACVC,WAAY,EACZjE,SAAU,OACV1C,MAAO,YAEJ,CACL,IAAM4G,EAA0BtB,YAAwB,CACtDC,OAAQV,EAAWgC,QACnBrB,YAAa3F,EAAM2F,YAAYD,SAE3BuB,EAAiD,kBAA5BF,EAAuCA,EAAwBJ,GAAcI,EAElG5G,EAAQ,GAAH,OAAM+G,KAAKC,MAAM5E,EAAO0E,EAAc,KAAQ,IAA9C,KACPG,EAAO,GAEX,GAAIpC,EAAWrD,WAAaqD,EAAW/C,MAAqC,IAA7B+C,EAAWqB,cAAqB,CAC7E,IAAMF,EAAenG,EAAM4D,QAAQoB,EAAWqB,eAE9C,GAAqB,QAAjBF,EAAwB,CAC1B,IAAMkB,EAAY,QAAH,OAAWlH,EAAX,cAAsB4D,EAAUoC,GAAhC,KACfiB,EAAO,CACLR,UAAWS,EACXxE,SAAUwE,IAOhB/C,EAASa,YAAS,CAChByB,UAAWzG,EACX0G,SAAU,EACVhE,SAAU1C,GACTiH,GAIwC,IAAzCpH,EAAM2F,YAAYD,OAAOiB,GAC3BW,OAAOC,OAAOb,EAAcpC,GAE5BoC,EAAa1G,EAAM2F,YAAY6B,GAAGb,IAAerC,GAuKnDmD,CAAaf,EAAc1G,EAAO2G,EAAY3B,GACvC0B,IACN,OAuBGgB,EAAoBtE,cAAiB,SAAcuE,EAASC,GAChE,IAmDkBC,EAnDZC,EAAaC,YAAc,CAC/BhD,MAAO4C,EACP9C,KAAM,YAEFE,EAAQiD,YAAaF,GAGzBlG,EAgBEmD,EAhBFnD,UACSqG,EAePlD,EAfFiC,QACekB,EAcbnD,EAdFsB,cAHF,EAiBItB,EAbF1C,iBAJF,MAIc,MAJd,IAiBI0C,EAZFpD,iBALF,WAiBIoD,EAXFlD,iBANF,MAMc,MANd,IAiBIkD,EAVF9C,YAPF,WAiBI8C,EATFN,UARF,WAiBIM,EARF/C,UATF,SAUcmG,EAOVpD,EAPFkB,WAVF,EAiBIlB,EANFhD,UAXF,WAiBIgD,EALFnB,eAZF,MAYY,EAZZ,IAiBImB,EAJFlB,YAbF,MAaS,OAbT,IAiBIkB,EAHFL,UAdF,WAiBIK,EAFFjD,UAfF,WAiBIiD,EADFE,oBAhBF,SAkBMmD,EAAQC,YAA8BtD,EAAOjB,GAE7CmC,EAAakC,GAAkBvE,EAC/ByC,EAAgB6B,GAAqBtE,EACrC0E,EAAiBlF,aAAiBD,GAGlC6D,EAAUiB,GAAeK,GAAkB,GAE3CtD,EAAaG,YAAS,GAAIJ,EAAO,CACrCiC,UACArF,YACAE,YACAI,OACAwC,KACAzC,KACAD,KACAkE,aACAI,gBACAxC,OACAa,KACA5C,KACAmD,iBAGIxD,EAvEkB,SAAAuD,GACxB,IACEvD,EAYEuD,EAZFvD,QACAE,EAWEqD,EAXFrD,UACAE,EAUEmD,EAVFnD,UACAI,EASE+C,EATF/C,KACAwC,EAQEO,EARFP,GACAzC,EAOEgD,EAPFhD,GACAD,EAMEiD,EANFjD,GACA6B,EAKEoB,EALFpB,QACAC,EAIEmB,EAJFnB,KACAa,EAGEM,EAHFN,GACA5C,EAEEkD,EAFFlD,GAGIyG,EAAQ,CACZrD,KAAM,CAAC,OAAQvD,GAAa,YAAaM,GAAQ,OAF/C+C,EADFC,cAGyE,gBAArE,mBAAwFZ,EAAsBT,EAASjC,IAAvH,CAAiJ,QAAdE,GAAA,uBAAuCsC,OAAOtC,IAAuB,SAATgC,GAAA,kBAA8BM,OAAON,KAAgB,IAAP/B,GAAA,kBAA2BqC,OAAOrC,KAAc,IAAPC,GAAA,kBAA2BoC,OAAOpC,KAAc,IAAPC,GAAA,kBAA2BmC,OAAOnC,KAAc,IAAPyC,GAAA,kBAA2BN,OAAOM,KAAc,IAAPC,GAAA,kBAA2BP,OAAOO,OAEzb,OAAO8D,YAAeD,EAAOlF,EAAqB5B,GAqDlCgH,CAAkBzD,GAOlC,OALkB6C,EAKaa,cAAK/D,EAAUQ,YAAS,CACrDH,WAAYA,EACZpD,UAAW+G,YAAKlH,EAAQyD,KAAMtD,GAC9BgH,GAAIvG,EACJuF,IAAKA,GACJQ,IAVsC,KAAZpB,EAA8B0B,cAAKvF,EAAY0F,SAAU,CACpFC,MAAO9B,EACPvE,SAAUoF,IACPA,KA8KQH,O,iCC9ff,0KAgBO,IAAMqB,EAAmB,QACnBC,EAAiB,MACjBC,EAAgB,KAChBC,EAAmB,QAEnBC,EAAY,CACvB,CACEC,YAAaL,EACbM,YAAa,QACbjI,KAAM,mBAER,CACEgI,YAAaJ,EACbK,YAAa,uBACbjI,KAAM,iBAER,CACEgI,YAAaH,EACbI,YAAa,SACbjI,KAAM,iBAER,CACEgI,YAAaF,EACbG,YAAa,QACbjI,KAAM,qB,yICoDKrB,uBAvDA,SAACC,GAAD,OACbC,YAAa,mDACRqJ,KACAC,KACAC,KACAC,YAAmBzJ,EAAM4D,QAAQ,QAkDzB7D,EA/CU,SAAC,GAA4C,IAA1C0B,EAAyC,EAAzCA,QAASiI,EAAgC,EAAhCA,QAKnC,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAYjJ,MAAM,uBAClB,cAAC,IAAD,CAAUyC,GAAG,SAASzC,MAAM,+BAE5B,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMwB,MAAI,EAACH,GAAI,GAAf,SACE,cAAC,IAAD,CAAMG,MAAI,EAACH,GAAI,GAAf,SACE,cAAC,IAAD,CAAMG,MAAI,EAACH,GAAI,GAAf,SACE,qBAAKF,UAAWH,EAAQkI,cAAxB,SACGR,IAAUxF,KAAI,SAACiG,EAAUC,GAAX,OACb,yBACEjI,UAAWH,EAAQqI,YACnBxH,QAAS,WAlBV,IAACyH,IAmBaH,EAASR,YAlBxCM,EAAQM,KAAR,qBAA2BD,KAeX,UAOE,qBAAKnI,UAAWH,EAAQwI,gBAAxB,SACE,qBACEC,IAAKN,EAASxI,KACdQ,UAAWH,EAAQ0I,WACnBC,IAAKR,EAASP,gBAIlB,qBAAKzH,UAAWH,EAAQ4I,iBAAxB,SACE,4BAAIT,EAASP,kBAhBjB,kBAKkBQ,EAAMS,SALxB,YAKoCV,EAASP","file":"static/js/86.70006cb7.chunk.js","sourcesContent":["import React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { connect } from \"react-redux\";\nimport { Box } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { AppState } from \"../../../../store\";\nimport OperatorLogo from \"../../../../icons/OperatorLogo\";\nimport ConsoleLogo from \"../../../../icons/ConsoleLogo\";\nimport { IFileItem } from \"../../ObjectBrowser/reducers\";\nimport { toggleList } from \"../../ObjectBrowser/actions\";\nimport { ObjectManagerIcon } from \"../../../../icons\";\n\ninterface IPageHeader {\n  classes: any;\n  sidebarOpen?: boolean;\n  operatorMode?: boolean;\n  label: any;\n  actions?: any;\n  managerObjects?: IFileItem[];\n  toggleList: typeof toggleList;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      // position: \"absolute\",\n      width: \"100%\",\n      minHeight: 79,\n      display: \"flex\",\n      backgroundColor: \"#fff\",\n      left: 0,\n      boxShadow: \"rgba(0,0,0,.08) 0 3px 10px\",\n    },\n    label: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n    labelStyle: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 700,\n      marginLeft: 34,\n      marginTop: 8,\n    },\n    rightMenu: {\n      textAlign: \"right\",\n    },\n    logo: {\n      marginLeft: 34,\n      fill: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 120,\n      },\n    },\n  });\n\nconst PageHeader = ({\n  classes,\n  label,\n  actions,\n  sidebarOpen,\n  operatorMode,\n  managerObjects,\n  toggleList,\n}: IPageHeader) => {\n  return (\n    <Grid\n      container\n      className={`${classes.headerContainer} page-header`}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Box display={{ xs: \"block\", sm: \"block\", md: \"none\" }}>\n        <Grid item xs={12} style={{ height: 10 }}>\n          &nbsp;\n        </Grid>\n      </Box>\n      {/* <Grid item xs={12} sm={12} md={6} className={classes.label}>\n        {!sidebarOpen && (\n          <div className={classes.logo}>\n            {operatorMode ? <OperatorLogo /> : <ConsoleLogo />}\n          </div>\n        )}\n        <Typography variant=\"h4\" className={classes.labelStyle}>\n          {label}\n        </Typography>\n      </Grid> */}\n      <Grid item xs={12} sm={12} md={6} className={classes.rightMenu}>\n        {actions && actions}\n        {managerObjects && managerObjects.length > 0 && (\n          <IconButton\n            color=\"primary\"\n            aria-label=\"Refresh List\"\n            component=\"span\"\n            onClick={() => {\n              toggleList();\n            }}\n            size=\"large\"\n          >\n            <ObjectManagerIcon />\n          </IconButton>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  sidebarOpen: state.system.sidebarOpen,\n  operatorMode: state.system.operatorMode,\n  managerObjects: state.objectBrowser.objectManager.objectsToManage,\n});\n\nconst mapDispatchToProps = {\n  toggleList,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(PageHeader));\n","import React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { pageContentStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...pageContentStyles,\n  });\n\ntype PageLayoutProps = {\n  className?: string;\n  classes?: any;\n  children: any;\n};\n\nconst PageLayout = ({ classes, className = \"\", children }: PageLayoutProps) => {\n  return (\n    <div className={classes.contentSpacer}>\n      <Grid container>\n        <Grid item xs={12} className={className}>\n          {children}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(PageLayout);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { BackSettingsIcon } from \"../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    link: {\n      display: \"flex\",\n      alignItems: \"center\",\n      textDecoration: \"none\",\n      maxWidth: \"250px\",\n      padding: \"2rem 2rem 0rem 2rem\",\n      color: theme.palette.primary.light,\n      fontSize: \".8rem\",\n      \"&:hover\": {\n        textDecoration: \"underline\",\n      },\n    },\n    icon: {\n      marginRight: \".3rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n  });\n\ninterface IBackLink {\n  classes: any;\n  to: string;\n  label: string;\n  className?: any;\n}\n\nconst BackLink = ({ to, label, classes, className }: IBackLink) => {\n  return (\n    <Link to={to} className={`${classes.link} ${className ? className : \"\"}`}>\n      <div className={classes.icon}>\n        <BackSettingsIcon />\n      </div>\n      <div className={classes.label}>{label}</div>\n    </Link>\n  );\n};\n\nexport default withStyles(styles)(BackLink);\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst GridContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\n\nexport default GridContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth', // spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`), // direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`), // wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`), // grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"lg\", \"md\", \"rowSpacing\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"];\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nfunction generateGrid(globalStyles, theme, breakpoint, ownerState) {\n  const size = ownerState[breakpoint];\n\n  if (!size) {\n    return;\n  }\n\n  let styles = {};\n\n  if (size === true) {\n    // For the auto layouting\n    styles = {\n      flexBasis: 0,\n      flexGrow: 1,\n      maxWidth: '100%'\n    };\n  } else if (size === 'auto') {\n    styles = {\n      flexBasis: 'auto',\n      flexGrow: 0,\n      flexShrink: 0,\n      maxWidth: 'none',\n      width: 'auto'\n    };\n  } else {\n    const columnsBreakpointValues = resolveBreakpointValues({\n      values: ownerState.columns,\n      breakpoints: theme.breakpoints.values\n    });\n    const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues; // Keep 7 significant numbers.\n\n    const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n    let more = {};\n\n    if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n      const themeSpacing = theme.spacing(ownerState.columnSpacing);\n\n      if (themeSpacing !== '0px') {\n        const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n        more = {\n          flexBasis: fullWidth,\n          maxWidth: fullWidth\n        };\n      }\n    } // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n    styles = _extends({\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    }, more);\n  } // No need for a media query for the first size.\n\n\n  if (theme.breakpoints.values[breakpoint] === 0) {\n    Object.assign(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n\n    return output;\n  });\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n}\nexport function resolveSpacingClasses(spacing, container, styles = {}) {\n  // in case of grid item or undefined/null or `spacing` <= 0\n  if (!container || !spacing || spacing <= 0) {\n    return [];\n  } // in case of string/number `spacing`\n\n\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`] || `spacing-xs-${String(spacing)}`];\n  } // in case of object `spacing`\n\n\n  const {\n    xs,\n    sm,\n    md,\n    lg,\n    xl\n  } = spacing;\n  return [Number(xs) > 0 && (styles[`spacing-xs-${String(xs)}`] || `spacing-xs-${String(xs)}`), Number(sm) > 0 && (styles[`spacing-sm-${String(sm)}`] || `spacing-sm-${String(sm)}`), Number(md) > 0 && (styles[`spacing-md-${String(md)}`] || `spacing-md-${String(md)}`), Number(lg) > 0 && (styles[`spacing-lg-${String(lg)}`] || `spacing-lg-${String(lg)}`), Number(xl) > 0 && (styles[`spacing-xl-${String(xl)}`] || `spacing-xl-${String(xl)}`)];\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      container,\n      direction,\n      item,\n      lg,\n      md,\n      sm,\n      spacing,\n      wrap,\n      xl,\n      xs,\n      zeroMinWidth\n    } = props.ownerState;\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...resolveSpacingClasses(spacing, container, styles), direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], xs !== false && styles[`grid-xs-${String(xs)}`], sm !== false && styles[`grid-sm-${String(sm)}`], md !== false && styles[`grid-md-${String(md)}`], lg !== false && styles[`grid-lg-${String(lg)}`], xl !== false && styles[`grid-xl-${String(xl)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap === 'nowrap' && {\n  flexWrap: 'nowrap'\n}, ownerState.wrap === 'reverse' && {\n  flexWrap: 'wrap-reverse'\n}), generateDirection, generateRowGap, generateColumnGap, ({\n  theme,\n  ownerState\n}) => theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n  // Use side effect over immutability for better performance.\n  generateGrid(globalStyles, theme, breakpoint, ownerState);\n  return globalStyles;\n}, {}));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...resolveSpacingClasses(spacing, container), direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, xs !== false && `grid-xs-${String(xs)}`, sm !== false && `grid-sm-${String(sm)}`, md !== false && `grid-md-${String(md)}`, lg !== false && `grid-lg-${String(lg)}`, xl !== false && `grid-xl-${String(xl)}`]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    className,\n    columns: columnsProp,\n    columnSpacing: columnSpacingProp,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    lg = false,\n    md = false,\n    rowSpacing: rowSpacingProp,\n    sm = false,\n    spacing = 0,\n    wrap = 'wrap',\n    xl = false,\n    xs = false,\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext); // setting prop before context to accomodate nesting\n  // colums set with default breakpoint unit of 12\n\n  const columns = columnsProp || columnsContext || 12;\n\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const wrapChild = element => columns !== 12 ? /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: element\n  }) : element;\n\n  return wrapChild( /*#__PURE__*/_jsx(GridRoot, _extends({\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const minioServiceName = \"minio\";\nexport const gcsServiceName = \"gcs\";\nexport const s3ServiceName = \"s3\";\nexport const azureServiceName = \"azure\";\n\nexport const tierTypes = [\n  {\n    serviceName: minioServiceName,\n    targetTitle: \"MinIO\",\n    logo: \"/minio-logo.svg\",\n  },\n  {\n    serviceName: gcsServiceName,\n    targetTitle: \"Google Cloud Storage\",\n    logo: \"/gcs-logo.svg\",\n  },\n  {\n    serviceName: s3ServiceName,\n    targetTitle: \"AWS S3\",\n    logo: \"/aws-logo.svg\",\n  },\n  {\n    serviceName: azureServiceName,\n    targetTitle: \"Azure\",\n    logo: \"/azure-logo.svg\",\n  },\n];\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  containerForHeader,\n  searchField,\n  settingsCommon,\n  typesSelection,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport { tierTypes } from \"./utils\";\nimport BackLink from \"../../../../common/BackLink\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\n\ninterface ITypeTiersConfig {\n  classes: any;\n  history: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...searchField,\n    ...settingsCommon,\n    ...typesSelection,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst TierTypeSelector = ({ classes, history }: ITypeTiersConfig) => {\n  const typeSelect = (selectName: string) => {\n    history.push(`/tiers/add/${selectName}`);\n  };\n\n  return (\n    <Fragment>\n      <PageHeader label=\"Tier Configuration\" />\n      <BackLink to=\"/tiers\" label=\"Return to Configured Tiers\" />\n\n      <PageLayout>\n        <Grid>\n          <Grid item xs={12}>\n            <Grid item xs={12}>\n              <Grid item xs={12}>\n                <div className={classes.iconContainer}>\n                  {tierTypes.map((tierType, index) => (\n                    <button\n                      className={classes.lambdaNotif}\n                      onClick={() => {\n                        typeSelect(tierType.serviceName);\n                      }}\n                      key={`tierOpt-${index.toString}-${tierType.targetTitle}`}\n                    >\n                      <div className={classes.lambdaNotifIcon}>\n                        <img\n                          src={tierType.logo}\n                          className={classes.logoButton}\n                          alt={tierType.targetTitle}\n                        />\n                      </div>\n\n                      <div className={classes.lambdaNotifTitle}>\n                        <b>{tierType.targetTitle}</b>\n                      </div>\n                    </button>\n                  ))}\n                </div>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(TierTypeSelector);\n"],"sourceRoot":""}